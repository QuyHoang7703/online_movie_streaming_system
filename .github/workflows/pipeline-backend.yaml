name: OMSS Backend API Pipeline

on:
  push:
    branches:
      - ci/pipeline
    paths:
      - src/**
      - .github/workflows/**
      - 'Dockerfile'

jobs:
  test:
    name: Compile and Unit Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Debug folder tree
        run: |
          echo "Current directory:"
          pwd
          echo "List files:"
          ls -la

      - name: Run compile + test
        run: mvnw clean verify

  build-push-image:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    env:
      AZURE_STORAGE_ACCOUNT_NAME: ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }}
      AZURE_STORAGE_ACCOUNT_KEY: ${{ secrets.AZURE_STORAGE_ACCOUNT_KEY }}
      GG_Client_ID: ${{ secrets.GG_Client_ID }}
      GG_Client_Secret: ${{ secrets.GG_Client_Secret }}
      JWT_SECRET: ${{ secrets.JWT_SECRET }}
      APP_PASSWORD: ${{ secrets.APP_PASSWORD }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Extract project version from pom.xml
        id: extract_version
        run: echo "VERSION=$(mvnw -q -Dexec.executable='echo' -Dexec.args='${project.version}' --non-recursive exec:exec)" >> $GITHUB_OUTPUT

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: OnlineMovieStreamingSystem
          file: ./Dockerfile
          push: true
          platforms: linux/amd64
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/omss-api:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/omss-api:${{ steps.extract_version.outputs.VERSION }}
          build-args: |
            PROFILE=dev
            APP_VERSION=${{ steps.extract_version.outputs.VERSION }}
